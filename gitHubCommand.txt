18/9/2024 WEDNESDAY

bash>>
git version
git status // if not in the respository, initialize git
ls -la // list of folder/file
git init // initialize git = create .git folder
ls -la // check .git
git status // check for every update that made

touch .gitignore
**dont need to push these:**
**dont need files that is in our local storage**
**dont need push secret file**

.gitignore>>
.DS_Store
.env
.env.*
node_modules/
<secretFiles>

ADD TO GIT
git add <filename>/ OR git commit -a
git add . // to add everything

REMOVE FROM GIT
git rm -r --cached <filename>/

RESTORE
git restore --staged <filename>/

SWITCH
git switch -c <branchname: test> // -c is to create branch
git switch <branchname: main> // switch balik ke asal iaitu main

BRANCH
git branch -m main
git branch // to see the content OR changes of the branch

EXPLORE GIT DIRECTORY
cd .git
ls
cat HEAD // cat: to see what's inside? && HEAD: where we are currently on?
cat config
cat index
cd refs 

cd // move in 
cd .. // move out
ls // list

**if first time**

SAVE CHANGES w DESCRIPTION
git commit -m '<decription>'

HISTORY
git log >> git history >> get commit number to get changes
git log --oneline // taknak tgk panjang lebar, simple display output

.git/object >> convert format >> store it with bit files >> saving the snapshot

REMOVE GIT DIRECTORY
rm -rf .git >> remove the branch git in the visual

ADD GIT DIRECTORY
git init

IF YOU MADE ANY ADDED OR CHANGED
git add util/ || git add . >> to save the changes >> git commit -m 'add (what?)'
git status
git commit -m 'w/c: add util folder'
git log >> history for the changes

MOVE PATH
git switch [gitnum]
git branch [gitnum]
git switch --detach [gitnum]
git switch main

WHAT IS BRANCH?
single worktree
working remains in me
a copy of your home project
my own branch, that im working on
--------------------------------------------------------
20/9/2024 FRIDAY

git switch main
git branch

how to push code from github?
**create new respository**

**copy link respository**
https://github.com/adeliafebriani/blog-server.git

git remote -v
git remote add origin git@github.com:adeliafebriani/blog-server.git

**make sure, cek the status**
git status

**push the git code**
git push -u origin main

**pull back**
git config pull.rebase false
git pull origin main
git pull

git pull --allow-unrelated-histories

README>>

# Install Dependencies
```yarn```

# Run the code
```yarn dev```

terminal>>

git log --oneline
**to check the history of any changes**

**collaborate**

in terminal desktop>>
git clone git@github.com:adeliafebriani/blog-server.git

send pull request
git switch -c adelia-feature // create my own branch

modify the README>>
## Blog Server

## Install Dependencies
`yarn`

## Run the code
`yarn dev`

git status
git add .
git commit -m 'modify read.me file heading'
git push -u origin jude-feature
**add password**
